{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/app.js","src/js/directives/sw-select-ble-device.directive.js","src/js/entry.js","src/js/factories/devices.factory.js","src/js/factories/example.ble.factory.js","src/js/factories/example.ble.helper.factory.js"],"names":[],"mappings":"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","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n *  Example BLE Scan App\n *  To demonstrate BLE scanning inconsistencies with older Android phones.\n *\n *  @author Kevin Tjiam <kevin@tjiam.com>\n */\n\n/**\n *  Standard js style callback\n *  @callback standardCallback\n *  @param {object} err - An error object. Can be any object; null if there **is no** error.\n *  @param {object} res - A response object. Can be any object; null if there **is an** error.\n */\n\nangular\n    .module('Example', ['ionic'])\n    .run([\n        '$ionicPlatform',\n        '$timeout',\n        function ($ionicPlatform, $timeout) {\n            $ionicPlatform.ready(function () {\n                if (window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard) {\n                    cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n                    cordova.plugins.Keyboard.disableScroll(true);\n                }\n\n                if (window.StatusBar) {\n                    // org.apache.cordova.statusbar required\n                    StatusBar.styleDefault();\n                }\n            });\n        }])\n    .config(function ($stateProvider, $urlRouterProvider) {\n        $stateProvider\n            .state('home', {\n                url: '/home',\n                templateUrl: 'templates/home.html'\n            });\n\n        $urlRouterProvider.otherwise('/home');\n    });\n\nangular\n    .module('ionic')\n    .config(['$provide', '$ionicConfigProvider', function ($provide, $ionicConfigProvider) {\n        // Fix tab glitch iOS ~9.2\n        $provide.decorator('ionTabNavDirective', ['$delegate', function ($delegate) {\n            var directive = $delegate[0];\n\n            // jscs:disable maximumLineLength\n            directive.template = '<a ng-class=\"{\\'tab-item-active\\': isTabActive(), \\'has-badge\\':badge, \\'tab-hidden\\':isHidden()}\" ng-disabled=\"disabled()\" class=\"tab-item\"> <span class=\"badge {{badgeStyle}}\" ng-if=\"badge\">{{badge}}</span> <i class=\"icon {{getIconOn()}}\"></i> <span class=\"tab-title\" ng-bind-html=\"title\"></span></a>';\n\n            // jscs:enable maximumLineLength\n            return $delegate;\n        }]);\n\n        // Force tab bottom position for Android\n        $ionicConfigProvider.platform.android.tabs.position('bottom');\n    }]);\n\nmodule.exports = angular;\n","angular\n    .module('Example')\n    .directive('swSelectBleDevice', [\n        'ExampleBle',\n        'Devices',\n        '$ionicModal',\n        'ExampleBleHelper',\n        swSelectBleDeviceDirective\n    ]);\n\nfunction swSelectBleDeviceDirective(ExampleBle, Devices, $ionicModal, ExampleBleHelper) {\n    function swSelectBleDeviceCtrl($scope, $element, $attrs) {\n        $scope.savedDevices = Devices.savedDevices;\n        $scope.discoveredPeripherals = [];\n        $scope.discoveredSavedPeripherals = [];\n        $scope.selectedDeviceName = '-';\n\n        ExampleBleHelper.onPeripheralDiscovery(function (device) {\n            // Sort into saved or unknown devices\n            var savedDevice = Devices.savedDevices.find(d => d.id === device.id);\n            if (savedDevice) {\n                $scope.discoveredSavedPeripherals.push(savedDevice);\n            } else {\n                $scope.discoveredPeripherals.push(device);\n            }\n\n            $scope.$apply();\n        });\n\n        // Modal\n        $ionicModal.fromTemplateUrl('templates/modals/devices.html', {\n            scope: $scope,\n            animation: 'slide-in-up'\n        }).then(function (modal) {\n            $scope.modal = modal;\n        });\n\n        $scope.openModal = function () {\n            $scope.discoveredPeripherals = [];\n            $scope.discoveredSavedPeripherals = [];\n            ExampleBleHelper.startDiscovery();\n            $scope.modal.show();\n        };\n\n        $scope.closeModal = function () {\n            $scope.discoveredPeripherals = [];\n            $scope.discoveredSavedPeripherals = [];\n            ExampleBleHelper.stopDiscovery();\n            $scope.modal.hide();\n        };\n\n        $scope.selectDevice = function (device) {\n            ExampleBleHelper.stopDiscovery();\n            ExampleBleHelper.connectToDevice(device);\n            $scope.closeModal();\n        };\n\n        ExampleBle.onDisconnected(function () {\n            $scope.selectedDeviceName = '-';\n            $scope.$apply();\n        });\n    }\n\n    return {\n        restrict: 'E',\n        scope: {},\n        controller: swSelectBleDeviceCtrl,\n        templateUrl: 'templates/directives/sw-select-ble-device.html'\n    };\n}\n\nmodule.exports = angular;\n","require('./app');\nrequire('./lib/*.js', { mode: 'expand' });\nrequire('./controllers/*.js', { mode: 'expand' });\nrequire('./directives/*.js', { mode: 'expand' });\nrequire('./services/*.js', { mode: 'expand' });\nrequire('./factories/*.js', { mode: 'expand' });\n","angular\n    .module('Example')\n    .factory('Devices', ['ExampleBle', '$rootScope', Devices]);\n\nfunction Devices(ExampleBle, $rootScope) {\n    var savedDevices = [];\n    loadDevicesFromLocalStorage();\n\n    /**\n     *  Saves current connected device to the savedDevices list, stored in localStorage.\n     *  @param {standardCallback} callback\n     */\n    function saveConnectedDevice(callback) {\n        var device = ExampleBle.getDevice();\n        if (!(device && device.id)) return callback('BLE device must be defined!', null);\n\n        var deviceExists = savedDevices.filter(d => d.id === device.id).length;\n        if (!deviceExists) {\n            savedDevices.push(device);\n        } else {\n            // find => replace => break\n            for (var i = 0; i < savedDevices.length; i++) {\n                if (savedDevices[i].id === device.id) {\n                    savedDevices[i] = device;\n                    break;\n                }\n            }\n        }\n\n        // save\n        saveDevicesToLocalStorage();\n\n        return callback(null, true);\n    }\n\n    /**\n     *  Updates the saved device name corresponding to the given device ID.\n     *  @param {object} device - BLE device object containing the property 'id'\n     *  @param {String} newName - the new name to update the saved device with.\n     *  @param {standardCallback} callback - optional\n     */\n    function updateSavedDeviceName(device, newName, callback) {\n        if (!(device && device.id)) return callback('BLE device must be defined!', null);\n        if (!newName) return callback('A new name must be defined!', null);\n\n        // Overwrite the device name to ensure it is updated. (iOS caches GAP name)\n        device.name = newName;\n\n        // find => replace => break\n        for (var i = 0; i < savedDevices.length; i++) {\n            if (savedDevices[i].id === device.id) {\n                savedDevices[i] = device;\n                break;\n            }\n        }\n\n        // save\n        saveDevicesToLocalStorage();\n    }\n\n    /**\n     *  Save device list (savedDevices) into localStorage.\n     */\n    function saveDevicesToLocalStorage() {\n        window.localStorage.setItem('savedDevices', JSON.stringify(savedDevices));\n    }\n\n    /**\n     *  Load device list from localStorage into savedDevices.\n     */\n    function loadDevicesFromLocalStorage() {\n        var devicesInStorage = JSON.parse(window.localStorage.getItem('savedDevices'));\n        savedDevices = Array.isArray(devicesInStorage) ? devicesInStorage : [];\n    }\n\n    /**\n     *  Clear saved devices list.\n     */\n    function clearSavedDevices() {\n        savedDevices = [];\n        saveDevicesToLocalStorage();\n    }\n\n    return {\n        savedDevices: savedDevices,\n        saveConnectedDevice: saveConnectedDevice,\n        updateSavedDeviceName: updateSavedDeviceName,\n        clearSavedDevices: clearSavedDevices\n    };\n}\n","angular\n    .module('Example')\n    .factory('ExampleBle', [\n        ExampleBleFactory\n    ]);\n\nfunction ExampleBleFactory() {\n        var _device = null;\n        var _peripheral = null;\n        var _connected = false;\n        var _onConnectedHandlers = [];\n        var _onDisconnectedHandlers = [];\n        var _reconnect = true;\n        var _bootloaderMode = false;\n\n        var ExampleService = {\n            uuid: '00001523-74B9-C1E2-1535-785FEABCD8AF',\n            characteristics: {\n                factoryCalib: {\n                    uuid: '00001527-74B9-C1E2-1535-785FEABCD8AF'\n                }\n            }\n        };\n\n        function init(device, callback) {\n            if (!device) return console.error('Device not specified.');\n\n            if (typeof callback !== 'function') callback = function () {};\n\n            var resetPeripherals = function () {\n                _device = device;\n                _peripheral = null;\n                _connected = false;\n            };\n\n            if (_device) {\n                ble.disconnect(_device.id, function (res) {\n                    resetPeripherals();\n                    callback(null, true);\n                }, function (err) {\n                    console.error(err);\n                    callback(err, null);\n                });\n            } else {\n                resetPeripherals();\n                callback(null, true);\n            }\n        }\n\n        function isInitialised() {\n            return !!_device;\n        }\n\n        function isConnected() {\n            return !!_peripheral;\n        }\n\n        function checkIfDeviceIsAdvertising(callback) {\n            var found = false;\n            ble.startScan([], function (peripheral) {\n                if (peripheral.id === _device.id) {\n                    console.log(`Found device advertising: ${JSON.stringify(peripheral)}`);\n                    found = true;\n                }\n            }, function () {\n                console.error('Scan error.');\n            });\n\n            setTimeout(function () {\n                ble.stopScan();\n                if (found) {\n                    callback(null, true);\n                } else {\n                    callback('Error', null);\n                }\n            }, 500);\n        }\n\n        const reconnectTimeout = 5000;\n        const reconnectMaxTries = 10;\n        var reconnectCounter = 0;\n        function reconnectHandler() {\n            if (!_device.id) return;\n\n            function tryConnect() {\n                console.log('Reconnect counter=' + reconnectCounter);\n                if (_reconnect) {\n                    if (reconnectCounter === reconnectMaxTries) return reconnectCounter = 0;\n                    reconnectCounter++;\n\n                    console.log(`==> Attempting to reconnect to ${_device.id}!`);\n                    checkIfDeviceIsAdvertising(function (err, res) {\n                        if (err) {\n                            setTimeout(function () {\n                                tryConnect();\n                            }, reconnectTimeout);\n                            return console.error(err);\n                        }\n\n                        connect(function (err, res) {\n                            if (err) {\n                                return setTimeout(function () {\n                                    tryConnect();\n                                }, reconnectTimeout);\n                            }\n\n                            reconnectCounter = 0;\n                        });\n                    });\n                }\n            }\n\n            tryConnect();\n        }\n\n        function onConnected(callback) {\n            if (typeof callback === 'function') _onConnectedHandlers.push(callback);\n        }\n\n        function onDisconnected(callback) {\n            if (typeof callback === 'function') _onDisconnectedHandlers.push(callback);\n        }\n\n        function connect(callback) {\n            if (!isInitialised()) {\n                return callback('Not initialised', null);\n            }\n\n            ble.connect(_device.id,\n                function (peripheral) {\n                    _peripheral = peripheral;\n                    _connected = true;\n\n                    console.log(`==> Successfully connected to ${peripheral.id}!`); // debug\n\n                    // fire onConnected user event handlers\n                    _onConnectedHandlers.forEach(function (handler) {\n                        handler();\n                    });\n\n                    callback(null, true);\n                },\n                function (peripheral) {\n                    _peripheral = null;\n                    _connected = false;\n\n                    console.log(`==> Lost connection to ${_device.id}: ${JSON.stringify(peripheral)}`); // debug\n\n                    // fire onDisconnected event handlers\n                    _onDisconnectedHandlers.forEach(function (handler) {\n                        handler();\n                    });\n\n                    // attempt to reconnect\n                    if (_reconnect) reconnectHandler();\n\n                    callback(peripheral, null);\n                }\n            );\n        }\n\n        function disconnect(callback) {\n            if (!isInitialised()) {\n                return callback('Not initialised', null);\n            }\n\n            _reconnect = false;\n\n            ble.disconnect(_device.id,\n                function () {\n                    _peripheral = null;\n                    _connected = false;\n\n                    stopAllNotifications();\n\n                    _onDisconnectedHandlers.forEach(function (handler) {\n                        handler();\n                    });\n\n                    callback(null, true);\n                },\n                function (reason) {\n                    callback(reason, null);\n                }\n            );\n        }\n\n        function getDevice() {\n            return _device;\n        }\n\n        var Example = {\n            ExampleService: ExampleService,\n            init: init,\n            isInitialised: isInitialised,\n            isConnected: isConnected,\n            onConnected: onConnected,\n            onDisconnected: onDisconnected,\n            connect: connect,\n            disconnect: disconnect,\n            getDevice: getDevice\n        };\n\n        return Example;\n    }\n\nmodule.exports = angular;\n","angular\n    .module('Example')\n    .factory('ExampleBleHelper', [\n        'ExampleBle',\n        '$rootScope',\n        ExampleBleHelper\n    ]);\n\nfunction ExampleBleHelper(logger, ExampleBle, $rootScope) {\n    var _bleStatus = 'initialising';\n    var _onPeripheralDiscoveryHandlers = [];\n\n    var discoveredPeripherals = [];\n\n    function onPeripheralDiscovery(handler) {\n        if (typeof handler === 'function') _onPeripheralDiscoveryHandlers.push(handler);\n    }\n\n    function triggerPeripheralDiscovery(device) {\n        _onPeripheralDiscoveryHandlers.forEach(function (handler) {\n            handler(device);\n        });\n    }\n\n    function startDiscovery(timeout, callback) {\n        // Assume scan is successful unless an error is thrown.\n        var success = true;\n\n        if (!timeout) timeout = 60000;\n\n        if (typeof callback !== 'function') callback = function () {};\n\n        if (window.cordova && window.cordova.plugins && ble) {\n            // We use a setTimeout here so we can get a more accurate interval\n            setTimeout(function () {\n                ble.isEnabled(function () {\n                    // reset discovered peripherals list\n                    discoveredPeripherals = [];\n\n                    ble.startScan([], function (device) {\n                        discoveredPeripherals.push(device);\n                        triggerPeripheralDiscovery(device);\n                    }, function (error) {\n                        console.error(error);\n                        success = false;\n                    });\n                });\n            }, 0);\n\n            setTimeout(function () {\n                ble.stopScan();\n                if (success) {\n                    callback(null, true);\n                } else {\n                    callback(true, null);\n                }\n            }, timeout);\n        }\n    }\n\n    function stopDiscovery() {\n        ble.stopScan();\n    }\n\n    function connectToDevice(device) {\n        if (!device) return console.error('No device specified.');\n\n        ExampleBle.init(device, function (err, res) {\n            if (err) return console.error(err);\n\n            console.log('Successfully initialised BLE device.');\n\n            ExampleBle.connect(function (err, res) {\n                if (err) return console.error(err);\n\n                console.log('Successfully connected to BLE device.');\n            });\n        });\n    }\n\n    function getBleStatus() {\n        return _bleStatus;\n    }\n\n    return {\n        startDiscovery: startDiscovery,\n        stopDiscovery: stopDiscovery,\n        connectToDevice: connectToDevice,\n        discoveredPeripherals: discoveredPeripherals,\n        getBleStatus: getBleStatus,\n        onPeripheralDiscovery: onPeripheralDiscovery,\n    };\n}\n"]}